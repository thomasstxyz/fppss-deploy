---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fppss-db
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    matchLabels:
      component: fppss-db
  template:
    metadata:
      labels:
        component: fppss-db
        app.kubernetes.io/part-of: fppss-energy
        app.kubernetes.io/name: fppss-db
        app.kubernetes.io/version: "10.6"
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: fppss-db
        image: mariadb:10.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
        - name: MARIADB_DATABASE
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_name
        - name: MARIADB_USER
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_user
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_password
        - name: MARIADB_RANDOM_ROOT_PASSWORD
          value: "yes"
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: fppss-db
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    component: fppss-db
  ports:
  - name: mariadb
    port: 3306
    protocol: TCP
    targetPort: 3306
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fppss-rest-api
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    matchLabels:
      component: fppss-rest-api
  template:
    metadata:
      labels:
        component: fppss-rest-api
        app.kubernetes.io/part-of: fppss-energy
        app.kubernetes.io/name: fppss-rest-api
        app.kubernetes.io/version: "latest"
    spec:
      terminationGracePeriodSeconds: 5

      volumes:
      - name: sql-files
        emptyDir: {}

      initContainers:
      - name: copy-sql-files
        image: ghcr.io/2110781006/fppss-rest-api:latest
        command: ['sh', '-c', 'cp -r /db-migrations/* /sql-files/']
        volumeMounts:
        - name: sql-files
          mountPath: /sql-files

      - name: wait-for-db
        image: ghcr.io/patrickdappollonio/wait-for:v1.0.0
        env:
        - name: DB_HOST
          value: "fppss-db:3306"
        command:
          - /wait-for
        args:
          - --host="google.com:443"
          - --host="$(DB_HOST)"
          - --timeout=300s
          - --verbose

      - name: migrate-db
        image: flyway/flyway
        env:
        - name: FPPSS_DB_URL
          value: "jdbc:mysql://fppss-db:3306/fppss"
        - name: FPPSS_DB_USER
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_user
        - name: FPPSS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_password
        command: ['sh', '-c', 'flyway -url=${FPPSS_DB_URL} -user=${FPPSS_DB_USER} -password=${FPPSS_DB_PASSWORD} -connectRetries=60 migrate']
        volumeMounts:
        - name: sql-files
          mountPath: /flyway/sql

      containers:
      - name: fppss-rest-api
        image: ghcr.io/2110781006/fppss-rest-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

        env:
        - name: FPPSS_KEY
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_key
        - name: FPPSS_DB_URL
          value: "jdbc:mysql://fppss-db:3306/fppss"
        - name: FPPSS_DB_USER
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_user
        - name: FPPSS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_db_password

        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
---
apiVersion: v1
kind: Service
metadata:
  name: fppss-rest-api
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    component: fppss-rest-api
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fppss-datacollector
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    matchLabels:
      component: fppss-datacollector
  template:
    metadata:
      labels:
        component: fppss-datacollector
        app.kubernetes.io/part-of: fppss-energy
        app.kubernetes.io/name: fppss-datacollector
        app.kubernetes.io/version: "latest"
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
      - name: wait-for-rest-api
        image: ghcr.io/patrickdappollonio/wait-for:v1.0.0
        env:
        - name: REST_API_URL
          value: "fppss-rest-api:80"
        command:
          - /wait-for
        args:
          - --host="google.com:443"
          - --host="$(REST_API_URL)"
          - --timeout=300s
          - --verbose

      containers:
      - name: fppss-datacollector
        image: ghcr.io/2110781006/fppss-datacollector:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: FPPSS_KEY
          valueFrom:
            secretKeyRef:
              name: fppss-energy-secret
              key: fppss_key
        - name: FPPSS_REST_URL
          value: "http://fppss-rest-api:80"
        - name: FPPSS_INTERVAL
          value: "300"
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fppss-frontend
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    matchLabels:
      component: fppss-frontend
  template:
    metadata:
      labels:
        component: fppss-frontend
        app.kubernetes.io/part-of: fppss-energy
        app.kubernetes.io/name: fppss-frontend
        app.kubernetes.io/version: "latest"
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
      - name: wait-for-rest-api
        image: ghcr.io/patrickdappollonio/wait-for:v1.0.0
        env:
        - name: REST_API_URL
          value: "fppss-rest-api:80"
        command:
          - /wait-for
        args:
          - --host="google.com:443"
          - --host="$(REST_API_URL)"
          - --timeout=300s
          - --verbose

      containers:
      - name: fppss-frontend
        image: ghcr.io/2110781006/fppss-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: FPPSS_PLACEHOLDER
          value: "https://placeholder"
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: fppss-frontend
  namespace: fppss-energy
  labels:
    app: fppss-energy
spec:
  selector:
    component: fppss-frontend
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fppss-energy-ingress
  namespace: fppss-energy
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fppss-frontend
            port:
              number: 80
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: fppss-rest-api
            port:
              number: 80
